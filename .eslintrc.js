module.exports = {
  root: true,
  parser: "@typescript-eslint/parser",
  parserOptions: {
    tsconfigRootDir: __dirname,
    project: ["./tsconfig.json"],
  },
  plugins: [
    "@typescript-eslint",
  ],
  extends: [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
  ],
  rules: {
    // https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin/docs/rules
    "@typescript-eslint/adjacent-overload-signatures": ["error"],
    "@typescript-eslint/array-type": ["error", {
      "default": "generic",
    }],
    "@typescript-eslint/await-thenable": ["error"],
    "@typescript-eslint/ban-ts-comment": ["error", {
      "ts-expect-error": "allow-with-description",
      "ts-ignore": "allow-with-description",
      "ts-nocheck": "allow-with-description",
      "ts-check": false,
      "minimumDescriptionLength": 3,
    }],
    "brace-style": "off",
    "@typescript-eslint/brace-style": ["error", "1tbs"],
    "@typescript-eslint/class-literal-property-style": ["error", "getters"],
    "comma-spacing": "off",
    "@typescript-eslint/comma-spacing": ["error"],
    "@typescript-eslint/consistent-type-assertions": ["error", {
      "assertionStyle": "as",
      "objectLiteralTypeAssertions": "allow-as-parameter",
    }],
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "default-param-last": "off",
    "@typescript-eslint/default-param-last": ["error"],
    "@typescript-eslint/explicit-member-accessibility": ["error", {
      "accessibility": "no-public",
    }],
    "func-call-spacing": "off",
    "@typescript-eslint/func-call-spacing": ["error"],
    "keyword-spacing": "off",
    "@typescript-eslint/keyword-spacing": ["error"],
    "lines-between-class-members": "off",
    "@typescript-eslint/member-delimiter-style": ["error", {
      "multiline": {
        "delimiter": "comma",
        "requireLast": true,
      },
      "singleline": {
        "delimiter": "comma",
        "requireLast": false,
      },
    }],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"],
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"],
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "require",
      },
      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow",
      },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "require",
      },
      {
        "selector": "class",
        "format": ["PascalCase"],
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^T[A-Z]",
          "match": true,
        },
      },
    ],
    "no-array-constructor": "off",
    "@typescript-eslint/no-array-constructor": ["error"],
    "@typescript-eslint/no-confusing-non-null-assertion": ["error"],
    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": ["error"],
    "@typescript-eslint/no-dynamic-delete": ["error"],
    "@typescript-eslint/no-empty-function": ["error", {
      "allow": [
        "setters", // Required for custom elements
      ],
    }],
    "@typescript-eslint/no-empty-interface": ["error"],
    "@typescript-eslint/no-explicit-any": ["off"],
    "@typescript-eslint/no-extra-non-null-assertion": ["error"],
    "no-extra-semi": "off",
    "@typescript-eslint/no-extra-semi": ["error"],
    "@typescript-eslint/no-extraneous-class": ["error"],
    "@typescript-eslint/no-floating-promises": ["error"],
    "@typescript-eslint/no-for-in-array": ["error"],
    "@typescript-eslint/no-inferrable-types": ["error"],
    "no-invalid-this": "off",
    // Rule is buggy with instance fields.
    // "@typescript-eslint/no-invalid-this": ["error"],
    "@typescript-eslint/no-invalid-void-type": ["error", {
      "allowInGenericTypeArguments": true,
    }],
    "no-loss-of-precision": "off",
    "@typescript-eslint/no-loss-of-precision": ["error"],
    "@typescript-eslint/no-misused-new": ["error"],
    "@typescript-eslint/no-misused-promises": ["error"],
    "@typescript-eslint/no-namespace": ["error"],
    "@typescript-eslint/no-non-null-asserted-optional-chain": ["error"],
    "@typescript-eslint/no-non-null-assertion": ["error"],
    "@typescript-eslint/no-parameter-properties": ["error"],
    "@typescript-eslint/no-require-imports": ["error"],
    "@typescript-eslint/no-this-alias": ["error"],
    "@typescript-eslint/no-throw-literal": ["error"],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": ["error"],
    "@typescript-eslint/no-unnecessary-condition": ["error", {
      "allowConstantLoopConditions": true,
    }],
    "@typescript-eslint/no-unnecessary-type-arguments": ["error"],
    "@typescript-eslint/no-unnecessary-type-assertion": ["error"],
    "@typescript-eslint/no-unsafe-assignment": ["error"],
    "@typescript-eslint/no-unsafe-call": ["error"],
    "@typescript-eslint/no-unsafe-return": ["error"],
    "@typescript-eslint/no-unused-vars-experimental": ["error"],
    "@typescript-eslint/no-unused-vars": ["off"],
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": ["error"],
    "@typescript-eslint/prefer-as-const": ["error"],
    "@typescript-eslint/prefer-for-of": ["error"],
    "@typescript-eslint/prefer-function-type": ["error"],
    "@typescript-eslint/prefer-nullish-coalescing": ["error"],
    "@typescript-eslint/prefer-optional-chain": ["error"],
    // "@typescript-eslint/prefer-readonly-parameter-types": ["error"],
    "@typescript-eslint/prefer-readonly": ["error"],
    "@typescript-eslint/prefer-reduce-type-parameter": ["error"],
    "@typescript-eslint/prefer-regexp-exec": ["error"],
    "@typescript-eslint/prefer-string-starts-ends-with": ["error"],
    "quotes": "off",
    "@typescript-eslint/quotes": ["error", "double"],
    "@typescript-eslint/require-array-sort-compare": ["error"],
    "@typescript-eslint/require-await": ["error"],
    "@typescript-eslint/restrict-plus-operands": ["error"],
    "no-return-await": "off",
    "@typescript-eslint/return-await": ["error", "always"],
    "semi": "off",
    "@typescript-eslint/semi": ["error", "always"],
    "space-before-function-paren": "off",
    "@typescript-eslint/space-before-function-paren": ["error"],
    "@typescript-eslint/switch-exhaustiveness-check": ["error"],
    "@typescript-eslint/triple-slash-reference": ["error"],
    "@typescript-eslint/type-annotation-spacing": ["error"],
    "@typescript-eslint/unbound-method": ["error"],
    "@typescript-eslint/unified-signatures": ["error"],
  },
};
